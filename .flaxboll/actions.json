{"1746816365485":{"actionType":"saveAll","createdAt":"1746816365485","actionID":"1746816365485","userID":"#TEMP","path":"system.capsules.35e5c9be-64c2-4db8-9b82-3db26ed4bbf1.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"() => {\n  const targetDate = '2025-12-31T23:59:59';\n  const [timeLeft, setTimeLeft] = React.useState('');\n\n  // Estilo para o cronômetro\n  const style_1 = {\n    alignItems: 'center',\n    justifyContent: 'center',\n  };\n  const style_days = {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#000',\n  };\n  const style_time = {\n    fontSize: 32,\n    color: '#000',\n  };\n\n\n\n  return (\n    <RN.View style={style_1}>\n      <RN.Text style={style_days}>{timeLeft.split('\\n')[0]}</RN.Text>\n      <RN.Text style={style_time}>{timeLeft.split('\\n')[1]}</RN.Text>\n    </RN.View>\n  );\n}","newValue":"() => {\n  const targetDate = '2025-12-31T23:59:59';\n  const [timeLeft, setTimeLeft] = React.useState('');\n\n  // Estilo para o cronômetro\n  const style_1 = {\n    alignItems: 'center',\n    justifyContent: 'center',\n  };\n  const style_days = {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#000',\n  };\n  const style_time = {\n    fontSize: 32,\n    color: '#000',\n  };\n\n  // Função para formatar o tempo\n  const formatTime = time => {\n    const days = Math.floor(time / (3600 * 24));\n    const hours = String(Math.floor((time % (3600 * 24)) / 3600)).padStart(\n      2,\n      '0',\n    );\n    const minutes = String(Math.floor((time % 3600) / 60)).padStart(2, '0');\n    const seconds = String(time % 60).padStart(2, '0');\n    return { days, hours, minutes, seconds };\n  };\n\n\n\n  return (\n    <RN.View style={style_1}>\n      <RN.Text style={style_days}>{timeLeft.split('\\n')[0]}</RN.Text>\n      <RN.Text style={style_time}>{timeLeft.split('\\n')[1]}</RN.Text>\n    </RN.View>\n  );\n}"}}